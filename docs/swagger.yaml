basePath: /api/v1
definitions:
  http.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  http.candidatoDTO:
    properties:
      address:
        type: string
      education:
        items:
          $ref: '#/definitions/http.education'
        type: array
      email:
        type: string
      experience:
        items:
          $ref: '#/definitions/http.experience'
        type: array
      id:
        type: integer
      interests:
        items:
          type: string
        type: array
      linkedin:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      resume_pdf_path:
        type: string
      skills:
        items:
          type: string
        type: array
    type: object
  http.createVagaDTO:
    properties:
      area:
        type: string
      description:
        type: string
      location:
        type: string
      requirements:
        items:
          type: string
        type: array
      title:
        type: string
      type:
        type: string
    type: object
  http.education:
    properties:
      course:
        type: string
      education_id:
        type: integer
      institution:
        type: string
      level:
        type: string
    type: object
  http.experience:
    properties:
      company:
        type: string
      experience_id:
        type: integer
      role:
        type: string
      years:
        type: integer
    type: object
  http.listCandidatoResponse:
    properties:
      candidatos:
        items:
          $ref: '#/definitions/http.candidatoDTO'
        type: array
      total:
        type: integer
    type: object
  http.listVagaResponse:
    properties:
      total:
        type: integer
      vagas:
        items:
          $ref: '#/definitions/http.vagaDTO'
        type: array
    type: object
  http.vagaDTO:
    properties:
      area:
        type: string
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      location:
        type: string
      posted_date:
        type: string
      requirements:
        items:
          type: string
        type: array
      title:
        type: string
      type:
        type: string
    type: object
  talenthub.CandidatoUpdate:
    properties:
      address:
        type: string
      linkedin:
        type: string
      name:
        type: string
      phone:
        type: string
      resume_pdf_path:
        type: string
    type: object
  talenthub.VagaUpdate:
    properties:
      area:
        type: string
      description:
        type: string
      location:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
info:
  contact: {}
  title: talentHub API
  version: "1.0"
paths:
  /candidato:
    get:
      description: Lista Candidatos
      parameters:
      - description: Pagination limit
        in: query
        name: limit
        type: integer
      - description: Pagination offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de candidatos
          schema:
            $ref: '#/definitions/http.listCandidatoResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Mensagem de erro
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: Lista Candidatos
      tags:
      - Candidatos
    post:
      consumes:
      - application/json
      description: Create candidato
      parameters:
      - description: Candidato a ser criado
        in: body
        name: candidato
        required: true
        schema:
          $ref: '#/definitions/http.candidatoDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Candidato criado
          schema:
            $ref: '#/definitions/http.candidatoDTO'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Mensagem de erro
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: Create candidato
      tags:
      - Candidatos
  /candidato/{id}:
    get:
      description: Get Candidato By ID
      parameters:
      - description: Candidato ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Candidato achado
          schema:
            $ref: '#/definitions/http.candidatoDTO'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Mensagem de error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: Get Candidato By ID
      tags:
      - Candidatos
    put:
      consumes:
      - application/json
      description: Update candidato
      parameters:
      - description: Candidato ID
        in: path
        name: id
        required: true
        type: integer
      - description: Dados de candidatos para atualizar
        in: body
        name: candidato
        required: true
        schema:
          $ref: '#/definitions/talenthub.CandidatoUpdate'
      produces:
      - application/json
      responses:
        "202":
          description: Candidato atualizado
          schema:
            $ref: '#/definitions/http.candidatoDTO'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Mensagem de erro
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: Update candidato
      tags:
      - Candidatos
  /vaga:
    get:
      description: Lista Vagas
      parameters:
      - description: Pagination limit
        in: query
        name: limit
        type: integer
      - description: Pagination offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de vagas
          schema:
            $ref: '#/definitions/http.listVagaResponse'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Mensagem de erro
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: Lista Vagas
      tags:
      - Vagas
    post:
      consumes:
      - application/json
      description: Create vaga
      parameters:
      - description: Vaga a ser criada
        in: body
        name: candidato
        required: true
        schema:
          $ref: '#/definitions/http.createVagaDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Vaga criada
          schema:
            $ref: '#/definitions/http.vagaDTO'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Mensagem de erro
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: Create vaga
      tags:
      - Vagas
  /vaga/{id}:
    get:
      description: Get Vaga By ID
      parameters:
      - description: Vaga ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Vaga achada
          schema:
            $ref: '#/definitions/http.vagaDTO'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Mensagem de error
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: Get Vaga By ID
      tags:
      - Vagas
    put:
      consumes:
      - application/json
      description: Update vaga
      parameters:
      - description: Vaga ID
        in: path
        name: id
        required: true
        type: integer
      - description: Dados de vagas para atualizar
        in: body
        name: candidato
        required: true
        schema:
          $ref: '#/definitions/talenthub.VagaUpdate'
      produces:
      - application/json
      responses:
        "202":
          description: Vaga atualizada
          schema:
            $ref: '#/definitions/http.vagaDTO'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Mensagem de erro
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: Update vaga
      tags:
      - Vagas
  /vaga/close/{id}:
    post:
      description: Close vaga
      parameters:
      - description: Vaga ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Vaga closed
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Mensagem de erro
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: Close vaga
      tags:
      - Vagas
  /vaga/open/{id}:
    post:
      description: Open vaga
      parameters:
      - description: Vaga ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Vaga aberta
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/http.ErrorResponse'
        "404":
          description: Mensagem de erro
          schema:
            $ref: '#/definitions/http.ErrorResponse'
      summary: Open vaga
      tags:
      - Vagas
swagger: "2.0"
